#include "includes/eyelash_42.h"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#include "includes/mouse.dtsi"
#include "includes/bluetooth.dtsi"
#include "includes/rgb.dtsi"

#include "includes/behaviours_homerow_mods.dtsi"
#include "includes/custom_behaviours.dtsi"
#include "includes/encoders.dtsi"
#include <dt-bindings/zmk/bt.h>


&soft_off { hold-time-ms = <2000>; };

#define BASE 0 // Base Layer for Win
#define BASEMAC 1 // Layer Shifter to Mac specific
#define WCTRL 2
#define MCTRL 3

#define ADAPT 17

#define XXX &none
#define ___ &trans

/* ───────────────────────────── Behaviors ───────────────────────────── */

/ {
    behaviors {
        /* Bestehend: Shift/Caps Tap-Dance */

        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
      

        /* Media tap-dances (aus deiner dtsi, falls genutzt) */

        tap_ct: tap_ct {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LCTRL>, <&kp LEFT_ALT>;
        };

        tap_mu: tap_mu {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C_NEXT>, <&kp C_PREV>;
        };

        /* ── Umlaute als Tap-Dance (DE-Host, ohne Unicode) ──
       DE-Layout:  ä = '    Ä = Shift+'    → SQT / LS(SQT)
                   ö = ;    Ö = Shift+;    → SEMI / LS(SEMI)
                   ü = [    Ü = Shift+[    → LBKT / LS(LBKT)
                   ß = -    SS (Doppeltap) → MINUS / Macro "SS"   */

        macro_SS: macro_SS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp LS(S)>;
        };

        deae: deae {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp LS(SQT)>;
        };

        deoe: deoe {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&kp LS(SEMI)>;
        };

        deue: deue {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp LS(LBKT)>;
        };

        desz: desz {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp MINUS>, <&macro_SS>;
        };

        

        tilde_de: tilde_de {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "TILDE_DE";
            bindings = <&kp RA(RBKT)>;               /* AltGr + +  → ~ */
        };

        
    };

    /* ───────────────────────── Encoder / Combos ───────────────────────── */

    

    combos {
        compatible = "zmk,combos";

        /*softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };*/
        /* (optional) deine frühere layer_3 Combo:
       combo_layer_3 {
         timeout-ms = <25>;
         bindings = <&tog 3>;
         key-positions = <0 1>;
         layers = <0xff>;
       };
    */
    };

    /* ───────────────────────────── Keymap ───────────────────────────── */

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        /* ================= BASE (Deutsch + ergonomisch) ================= */
        // ----------------------------------------------------------------------------------------------------
        // | Esc |  X  |  .  |  O  |  ,  |  Y  |     |     |  G  |     |  V  |  G   |  C  |  L  |  J  |  ß  |
        // | Tab |  H  |  A  |  E  |  I  |  U  |     |  G  |  G  |  G  |  D  |  T   |  R  |  N  |  S  |  F  |
        // |  #  |  K  |  Q  |  Ä  |  Ü  |  Ö  |  #  |     |  G  |     |  B  |  P   |  W  |  M  |  Z  | DEL |
        //                   | DEL | SPC | ENT |     |     |     |     | ENT | SPC  | ALT |

        default_layer {
            display-name = "BASE";
            bindings = <
// ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮                                        ╭────────────────────────╮                             ╭────────────────────────┬────────────────────────┬────────────────────────┬───────────────────────┬────────────────────────┬────────────────────────╮
             &kp ESC           &kp DE_X                 &kp DE_DOT                 &kp DE_O                &kp DE_COMMA                &kp DE_Y                                                       &rgb_ug R_COL_W                                        &kp DE_V                 &kp DE_G                 &kp DE_C                 &kp DE_L                &kp DE_J                 &kp DE_SZ           
// ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤               ╭────────────────────────┼────────────────────────┼────────────────────────╮    ├────────────────────────┼────────────────────────┼────────────────────────┼───────────────────────┼────────────────────────┼────────────────────────┤
             &kp TAB           &hm_l LEFT_WIN DE_H      &hm_l LEFT_ALT DE_A        &hm_l LCTRL DE_E        &hm_l LSHIFT DE_I           &kp DE_U                              &bt BT_SEL 0             &rgb_ug R_RGB_TOG         &bt BT_SEL 1                 &kp DE_D                 &hm_r RSHIFT DE_T        &hm_r RCTRL DE_R         &hm_r RALT DE_N         &hm_r RIGHT_WIN DE_S     &kp DE_F            
// ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤  ╭───────╮    ╰────────────────────────┼────────────────────────┼────────────────────────╯    ├────────────────────────┼────────────────────────┼────────────────────────┼───────────────────────┼────────────────────────┼────────────────────────┤
             XXX               &kp DE_K                 &kp DE_Q                   &kp DE_A_UM             &kp DE_U_UM                 &kp DE_O_UM             XXX                                    &rgb_ug R_COL_G                                        &kp DE_B                 &kp DE_P                 &kp DE_W                 &kp DE_M                &kp DE_Z                 &kp DEL        
// ╰────────────────────────┴────────────────────────┴────────────────────────┴────────────────────────┼────────────────────────┼────────────────────────┤  ╰───────╯                             ╰────────────────────────╯                             ├────────────────────────┼────────────────────────┼────────────────────────┼───────────────────────┼────────────────────────┼────────────────────────╯
                                                                                   &kp DEL                 &lt 1 SPACE                 &lt 2 ENTER                                                                                                           &lt 4 ENTER              &lt 3 BACKSPACE          &kp RSHIFT      
//                                                                            ╰────────────────────────┴────────────────────────┴────────────────────────╯                                                                                               ╰────────────────────────┴────────────────────────┴────────────────────────╯
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        /* ================= CODING (RAISE inhaltlich) ================= */
        // -------------------------------------------------------------------------------------------------------
        // |  [  |  {  |  (  |  )  |  }  |  ]  |     |     |     |  G  |     |  <  |  >  |  =  |  +  |  ~  |  `  |
        // |  !  |  -  |  *  |  /  |  \  |  |  |     |     |  G  |  G  |  G  |  &  |  ^  |  :  |  ;  |  ?  |  @  |
        // |  _  |  #  |  '  |  "  |  ,  |  .  | SPC |     |     |  G  |     |  $  |  %  |  => |  \  |  -> |  :: |
        //                   |     |     |     |     |     |     |     |     |     |     |     |

        lower_layer {
            display-name = "CODING";

            /* DE-Host-sichere Klammern/Operatoren + deine festen RGB/SPACE/MMV-Slots */

            bindings = <
&kp RA(N8)     &kp RA(N7)  &kp LS(N8)    &kp LS(N9)  &kp RA(N0)     &kp RA(N9)                                            &bt BT_NXT                    &kp NUBS    &kp LS(NUBS)  &kp LS(N0)   &kp RBKT       &tilde_de        &backtick_de
&kp LS(N1)     &kp FSLH    &kp LS(RBKT)  &kp LS(N7)  &kp RA(MINUS)  &kp RA(NUBS)                            &bt BT_SEL 0  &studio_unlock  &bt BT_SEL 1  &kp LS(N6)  &kp GRAVE     &kp LS(DOT)  &kp LS(COMMA)  &kp LS(MINUS)    &kp RA(Q)
&kp LS(FSLH)   &kp BSLH    &kp LS(BSLH)  &kp LS(N2)  &kp COMMA      &kp DOT                   &kp C_MUTE                  &bt BT_PRV                    &kp LS(N4)  &kp LS(N5)    &arrow_func  &kp RA(MINUS)  &arrow_thin      &scope_sep
                                         &trans      &trans         &kp BSPC                                                                            &kp INS     &kp DEL       &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        /* ================= NUMBER (Num/Operatoren + Macros) ================= */
        // -------------------------------------------------------------------------------------------------------
        // |     |     |     |     |     |     |     |     |     |  G  |     |     |  7  |  8  |  9  | BSPC |     |
        // |     |     |     |     |     |     |     |     |  G  |  G  |  G  |     |  4  |  5  |  6  | TAB  |     |
        // |     |     |     |     |     |     | SPC |     |     |  G  |     |  .  |  1  |  2  |  3  | RTAB |     |
        //                   |     |     |     |     |     |     |     |     |     |  0  |  0  |

        num_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &trans  &kp LC(LEFT)  &kp LS(UP)    &kp LC(RIGHT)  &trans                                &mmv MOVE_UP                     &trans   &kp N7  &kp N8  &kp N9  &kp BACKSPACE  &trans
&trans  &trans  &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(RIGHT)  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans   &kp N4  &kp N5  &kp N6  &kp TAB        &trans
&trans  &trans  &trans        &trans        &trans         &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp DOT  &kp N1  &kp N2  &kp N3  &kp LS(TAB)    &trans
                              &trans        &trans         &trans                                                                 &trans   &kp N0  &kp N0
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        /* ================= SYMBOL (Navigation/Editing) ================= */

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp ESC    &kp HOME  &kp UP    &kp END    &kp PG_UP     &kp CAPS                                 &mmv MOVE_UP                     &kp F1        &kp F2        &kp F3      &kp F4         &kp F5   &kp F6
&kp TAB    &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN     &kp INS                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp F7        &kp F8        &kp F9      &kp F10        &kp F11  &kp F12
&kp LCTRL  &kp LGUI  &kp LALT  &kp LSHFT  &kp LC(LEFT)  &kp LC(RIGHT)  &trans                    &mmv MOVE_DOWN                   &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(UP)  &kp LS(RIGHT)  &kp DEL  &trans
                               &trans     &trans        &kp SPACE                                                                 &kp RET       &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        /* ================= SYS (Bluetooth / Output / RGB / Backlight) ================= */

        sys_layer {
            display-name = "SYS";
            bindings = <
&bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &bt BT_NXT                                     &mmv MOVE_UP                     &bt BT_PRV       &bt BT_CLR       &bt BT_CLR_ALL   &out OUT_USB     &out OUT_BLE  &out OUT_TOG
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_EFF                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans        &trans
&bl BL_TOG       &bl BL_INC       &bl BL_DEC       &bl BL_CYCLE     &bl BL_SET 50    &bl BL_OFF       &kp C_MUTE                    &mmv MOVE_DOWN                   &bootloader      &studio_unlock   &trans           &trans           &trans        &trans
                                                   &trans           &trans           &trans                                                                          &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
